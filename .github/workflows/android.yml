name: Android CI - Build Optimized Debug APK

on:
  push:
    branches: [ main ]
    paths: &android_paths
      - 'android/**'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'app.json'
      - 'index.js'
      - 'App.tsx'
      - 'babel.config.js'
      - 'tsconfig.json'
      - '.github/workflows/android.yml'
  pull_request:
    branches: [ main ]
    paths: *android_paths

jobs:
  build-android-debug:
    name: Build Optimized Debug APK
    runs-on: ubuntu-latest

    steps:
      # -------------------------
      # 1Ô∏è‚É£ Checkout Source
      # -------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      # 2Ô∏è‚É£ Setup Node.js + Cache
      # -------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      # -------------------------
      # 3Ô∏è‚É£ Install Dependencies
      # -------------------------
      - name: Install dependencies
        run: |
          rm -rf node_modules
          npm ci --legacy-peer-deps

      # -------------------------
      # 4Ô∏è‚É£ Setup Java 17
      # -------------------------
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      # -------------------------
      # 5Ô∏è‚É£ Setup Android SDK
      # -------------------------
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # -------------------------
      # 6Ô∏è‚É£ Cache Gradle
      # -------------------------
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # -------------------------
      # 7Ô∏è‚É£ Enable Gradle Build Cache
      # -------------------------
      - name: Enable Gradle Build Cache
        run: echo "org.gradle.caching=true" >> ~/.gradle/gradle.properties

      # -------------------------
      # 8Ô∏è‚É£ Force Hermes Enabled (smaller JS engine)
      # -------------------------
      - name: Enable Hermes Runtime
        run: |
          if ! grep -q "enableHermes" android/app/build.gradle; then
            echo "project.ext.react = [ enableHermes: true ]" >> android/app/build.gradle
          fi

      # -------------------------
      # 9Ô∏è‚É£ Bundle React Native JS
      # -------------------------
      - name: Bundle React Native JS
        run: |
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/

      # -------------------------
      # üîü Build Debug APK (Split by ABI)
      # -------------------------
      - name: Build Optimized APK (Split by ABI)
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean assembleDebug \
            -PreactNativeArchitectures=armeabi-v7a,arm64-v8a,x86_64 \
            -PsplitApkByAbi=true \
            --no-daemon --parallel --build-cache --warning-mode all

      # -------------------------
      # 11Ô∏è‚É£ Strip native debug symbols
      # -------------------------
      - name: Strip native .so files
        run: |
          find android/app/build/outputs/apk/debug -name "*.so" -exec strip --strip-unneeded {} \; || true

      # -------------------------
      # 12Ô∏è‚É£ Remove unnecessary bundle map files
      # -------------------------
      - name: Clean up bundle map files
        run: |
          rm -f android/app/src/main/assets/index.android.bundle.map || true

      # -------------------------
      # 13Ô∏è‚É£ Show APK Path
      # -------------------------
      - name: Show APK path
        run: ls -lh android/app/build/outputs/apk/debug/

      # -------------------------
      # 14Ô∏è‚É£ Upload Debug APK Artifact
      # -------------------------
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-split
          path: android/app/build/outputs/apk/debug/*.apk
